{
  "version": 3,
  "sources": ["<stdin>", "../../node_modules/@remix-run/dev/compiler/shims/react.ts", "../../app/entry.server.tsx", "/Users/DanielWestbrook/Sites/brisk-poll/app/root.tsx", "../../app/session.server.ts", "../../app/models/user.server.ts", "../../app/db.server.ts", "../../app/components/Header.tsx", "../../app/utils.ts", "../../app/components/common/button.tsx", "../../app/components/common/styles.tsx", "../../app/components/ErrorHandler.tsx", "../../app/context.tsx", "/Users/DanielWestbrook/Sites/brisk-poll/app/routes/polls/$pollId/results.tsx", "../../app/models/poll.server.ts", "../../app/components/PollLink.tsx", "../../app/models/vote.model.ts", "../../app/sockets.tsx", "/Users/DanielWestbrook/Sites/brisk-poll/app/routes/polls/$pollId/index.tsx", "../../app/components/common/form.tsx", "../../app/components/common/input.tsx", "../../app/components/HiddenSignatureInput.tsx", "../../app/components/common/modal.tsx", "/Users/DanielWestbrook/Sites/brisk-poll/app/routes/healthcheck.tsx", "/Users/DanielWestbrook/Sites/brisk-poll/app/routes/logout.tsx", "/Users/DanielWestbrook/Sites/brisk-poll/app/routes/index.tsx", "/Users/DanielWestbrook/Sites/brisk-poll/app/routes/login.tsx", "/Users/DanielWestbrook/Sites/brisk-poll/app/routes/join.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import * as React from \"react\";\nimport type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./session.server\";\nimport Header from \"./components/Header\";\nimport ErrorHandler from \"./components/ErrorHandler\";\nimport type { Socket } from \"socket.io-client\";\nimport io from \"socket.io-client\";\nimport { SocketProvider } from \"./context\";\nimport { useListen } from \"./sockets\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: tailwindStylesheetUrl }];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Brisk Poll\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    user: await getUser(request),\n  });\n};\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        {title ? <title>{title}</title> : null}\n        <Links />\n      </head>\n      <body className=\"flex flex-col items-center max-w-6xl min-h-screen p-8 mx-auto m space-y-4\">\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport default function App() {\n  const [socket, setSocket] = React.useState<Socket>();\n\n  React.useEffect(() => {\n    const socket = io();\n    setSocket(socket);\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  // We can't use useListen here because we aren't inside the SocketProvider\n  React.useEffect(() => {\n    if (!socket) return;\n    socket.on(\"confirmation\", () => console.debug(\"connected!\"));\n  }, [socket]);\n\n  return (\n    <Document>\n      <Header />\n      <SocketProvider socket={socket}>\n        <Outlet />\n      </SocketProvider>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <Document title=\"Something went wrong\">\n      <ErrorHandler\n        title=\"App Error\"\n        message=\"Looks like something went very wrong.\"\n        error={error.message}\n      />\n    </Document>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    maxAge: 0,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(request: Request): Promise<string | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request): Promise<null | User> {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n): Promise<string> {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n\n  const searchParams = new URL(request.url).searchParams;\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\n\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { Password, User } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { User } from \"@prisma/client\";\n\nexport async function getUserById(id: User[\"id\"]) {\n  return prisma.user.findUnique({ where: { id } });\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return prisma.user.findUnique({ where: { email } });\n}\n\nexport async function createUser(email: User[\"email\"], password: string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  return prisma.user.create({\n    data: {\n      email,\n      password: {\n        create: {\n          hash: hashedPassword,\n        },\n      },\n    },\n  });\n}\n\nexport async function deleteUserByEmail(email: User[\"email\"]) {\n  return prisma.user.delete({ where: { email } });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"hash\"]\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { email },\n    include: {\n      password: true,\n    },\n  });\n\n  if (!userWithPassword || !userWithPassword.password) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(\n    password,\n    userWithPassword.password.hash\n  );\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "import { Link } from \"@remix-run/react\";\nimport { useHydrated } from \"remix-utils\";\nimport { useOptionalUser } from \"~/utils\";\nimport { ActionButton, LinkButton } from \"./common/button\";\nimport { withRing } from \"./common/styles\";\n\nexport default function Header() {\n  const user = useOptionalUser();\n  const hydrated = useHydrated();\n\n  const redirectSearchParams = hydrated\n    ? new URLSearchParams([[\"redirectTo\", window.location.pathname]])\n    : \"\";\n\n  return (\n    <header className=\"flex items-center justify-between w-full\">\n      <div className=\"flex-1\">\n        <Link to=\"/\" className={withRing}>\n          Logo\n        </Link>\n      </div>\n      <Link to=\"/\" className={withRing}>\n        <h1 className=\"text-xl font-bold\">Brisk Poll</h1>\n      </Link>\n      <div className=\"flex items-center justify-end flex-1 space-x-2\">\n        {user ? (\n          <>\n            <p className=\"px-2 text-gray-500\">{user.email}</p>\n            <ActionButton\n              variant=\"ghost\"\n              action={`/logout?${redirectSearchParams}`}\n            >\n              Logout\n            </ActionButton>\n          </>\n        ) : (\n          <>\n            <LinkButton variant=\"ghost\" to={`/login?${redirectSearchParams}`}>\n              Login\n            </LinkButton>\n            <LinkButton to={`/join?${redirectSearchParams}`}>\n              Sign Up\n            </LinkButton>\n          </>\n        )}\n      </div>\n    </header>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\nimport { v4 as uuidv4, v5 as uuidv5 } from \"uuid\";\n\nimport type { User } from \"~/models/user.server\";\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n\nexport function generateId(seed?: string): string {\n  return seed ? uuidv5(seed, uuidv5.URL) : uuidv4();\n}\n", "import type { LinkProps } from \"@remix-run/react\";\nimport { Form } from \"@remix-run/react\";\nimport { Link } from \"@remix-run/react\";\nimport * as React from \"react\";\nimport { transition, withRing } from \"./styles\";\n\nconst sizeStyles = {\n  sm: `px-3 py-2 text-sm`,\n  md: `px-4 py-2`,\n  lg: `px-6 py-3 text-lg`,\n};\n\nconst blockHovered = `hover:bg-gray-700`;\nconst blockActive = `active:bg-gray-500`;\nconst blockFocused = `focus-visible:outline-0 ${withRing}`;\n\nconst ghostHovered = `hover:bg-gray-100`;\nconst ghostActive = `active:bg-gray-200`;\nconst ghostFocused = `focus-visible:outline-0 ${withRing}`;\n\nconst common = `block text-center select-none`;\n\nconst variantStyles = {\n  block: `${common} bg-gray-900 text-white transition-all ${transition} ${blockActive} ${blockHovered} ${blockFocused}`,\n  ghost: `${common} bg-transparent transition-all ${transition} ${ghostActive} ${ghostHovered} ${ghostFocused}`,\n};\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  size?: \"sm\" | \"md\" | \"lg\";\n  variant?: \"block\" | \"ghost\";\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  className = \"\",\n  size = \"md\",\n  variant = \"block\",\n  ...props\n}) => {\n  return (\n    <button\n      className={`${variantStyles[variant]} ${sizeStyles[size]} ${className}`}\n      {...props}\n    />\n  );\n};\n\ninterface LinkButtonProps extends LinkProps {\n  size?: \"sm\" | \"md\" | \"lg\";\n  variant?: \"block\" | \"ghost\";\n}\n\nexport const LinkButton: React.FC<LinkButtonProps> = ({\n  className = \"\",\n  size = \"md\",\n  variant = \"block\",\n  ...props\n}) => {\n  return (\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    <Link\n      className={`${variantStyles[variant]} ${sizeStyles[size]} ${className}`}\n      {...props}\n    />\n  );\n};\n\ninterface ActionButtonProps extends ButtonProps {\n  action: string;\n}\n\nexport const ActionButton: React.FC<ActionButtonProps> = ({\n  className = \"\",\n  size = \"md\",\n  variant = \"block\",\n  action,\n  ...props\n}) => {\n  return (\n    <Form action={action} method=\"post\">\n      <button\n        className={`${variantStyles[variant]} ${sizeStyles[size]} ${className}`}\n        type=\"submit\"\n        {...props}\n      />\n    </Form>\n  );\n};\n\ninterface IconButtonProps extends Omit<ButtonProps, \"size\"> {\n  // This is the type of the icons from @heroicons/react\n  icon: (props: React.ComponentProps<\"svg\">) => JSX.Element;\n}\n\nexport const IconButton: React.FC<IconButtonProps> = ({\n  className = \"\",\n  variant = \"block\",\n  icon: Icon,\n  ...props\n}) => {\n  return (\n    <button className={`${variantStyles[variant]} p-3 ${className}`} {...props}>\n      <Icon className=\"w-4 h-4\" />\n    </button>\n  );\n};\n", "export const transition = `ease-in-out duration-150`;\nexport const noRing = `ring-0 focus:ring-0`;\nexport const withRing = `ring-0 focus:ring-1 focus:outline-none ring-gray-500 focus:ring-gray-500 focus:ring-offset-2`;\n\nexport const link = `text-gray-900 underline ${withRing} transition-all ${transition}`;\n", "import { useCatch } from \"@remix-run/react\";\n\ninterface Props {\n  title: string;\n  message: string;\n  error?: string;\n}\n\nexport default function ErrorHandler({ title, message, error }: Props) {\n  return (\n    <main className=\"flex flex-col justify-center flex-grow w-full max-w-6xl py-16 space-y-4\">\n      <h1 className=\"text-4xl font-bold\">{title}</h1>\n      <p>{message}</p>\n      {error ? <pre className=\"text-red-700\">{error}</pre> : null}\n    </main>\n  );\n}\n\nexport function CatchHandler() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <ErrorHandler\n        title=\"Page not found\"\n        message=\"We couldn't find what you were looking for.\"\n      />\n    );\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import type { ReactNode } from \"react\";\nimport { createContext, useContext } from \"react\";\nimport type { Socket } from \"socket.io-client\";\n\ntype ProviderProps = {\n  socket: Socket | undefined;\n  children: ReactNode;\n};\n\nconst context = createContext<Socket | undefined>(undefined);\n\nexport function useSocket() {\n  return useContext(context);\n}\n\nexport function SocketProvider({ socket, children }: ProviderProps) {\n  return <context.Provider value={socket}>{children}</context.Provider>;\n}\n", "import * as React from \"react\";\nimport type {\n  ErrorBoundaryComponent,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getPoll } from \"~/models/poll.server\";\nimport { useLoaderData, useParams } from \"@remix-run/react\";\nimport ErrorHandler, { CatchHandler } from \"~/components/ErrorHandler\";\nimport invariant from \"tiny-invariant\";\nimport PollLink from \"~/components/PollLink\";\nimport { getUserVotes } from \"~/models/vote.model\";\nimport { getUserId } from \"~/session.server\";\nimport { LinkButton } from \"~/components/common/button\";\nimport { useHydrated } from \"remix-utils\";\nimport { useListen } from \"~/sockets\";\nimport type { Option, Vote } from \"@prisma/client\";\n\ninterface LoaderData {\n  poll: Awaited<ReturnType<typeof getPoll>>;\n  userVotes: Awaited<ReturnType<typeof getUserVotes>>;\n}\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const id = params.pollId;\n  invariant(id, \"pollId not found\");\n  const poll = await getPoll({ id });\n  if (!poll) throw new Response(\"Poll Not Found\", { status: 404 });\n\n  const userId = await getUserId(request);\n  const userVotes = userId ? await getUserVotes({ userId, pollId: id }) : [];\n\n  return json<LoaderData>({ poll, userVotes });\n};\n\nexport const meta: MetaFunction = ({ data }) => {\n  if (!data) {\n    return { title: \"Poll not found\" };\n  }\n  const { poll } = data as LoaderData;\n  return { title: poll?.title };\n};\n\nexport default function PollResultsPage() {\n  const hydrated = useHydrated();\n  const data = useLoaderData() as LoaderData;\n  const poll = data.poll!;\n  const userVotes = data.userVotes;\n\n  const [newVotes, setNewVotes] = React.useState(0);\n  const totalVotes =\n    poll.options.reduce((total, option) => {\n      total += option.votes.length;\n      return total;\n    }, 0) + newVotes;\n\n  const pathToVote = `/polls/${poll.id}`;\n  const linkToVote = `${hydrated ? window.location.origin : \"\"}${pathToVote}`;\n\n  return (\n    <main className=\"flex flex-col justify-center flex-grow w-full max-w-lg pb-32 space-y-8\">\n      <h1 className=\"text-lg\">{poll.title}</h1>\n      <div className=\"space-y-6\">\n        {poll.options.map((option) => {\n          return (\n            <OptionVotes\n              key={option.id}\n              totalVotes={totalVotes}\n              option={option}\n              onNewVote={() => setNewVotes((v) => v + 1)}\n            />\n          );\n        })}\n      </div>\n      <div className=\"text-sm text-right text-gray-500\">\n        {userVotes?.length > 0 ? (\n          <p>\n            You voted{\" \"}\n            {userVotes.length === 1\n              ? `for \"${userVotes[0].option.title}\"`\n              : `${userVotes.length} times`}\n            .\n          </p>\n        ) : null}\n        <p>\n          There has been a total of {totalVotes}{\" \"}\n          {totalVotes === 1 ? \"vote\" : \"votes\"}.\n        </p>\n      </div>\n\n      {poll.allowMultipleVotes ? (\n        <LinkButton className=\"w-full\" to={pathToVote}>\n          Vote Again\n        </LinkButton>\n      ) : null}\n\n      <PollLink url={linkToVote} />\n    </main>\n  );\n}\n\ninterface OptionProps {\n  option: Option & { votes: Vote[] };\n  totalVotes: number;\n  onNewVote?: () => void;\n}\n\nfunction OptionVotes({ option, totalVotes, onNewVote }: OptionProps) {\n  const [newVotes, setNewVotes] = React.useState(0);\n  const votes = option.votes.length + newVotes;\n\n  useListen(`option ${option.id}`, (event) => {\n    if (event === \"vote\") {\n      setNewVotes((v) => v + 1);\n      onNewVote && onNewVote();\n    }\n  });\n\n  return (\n    <div key={option.id} className=\"space-y-1\">\n      <p className=\"text-4xl font-bold\">{option.title}</p>\n      {votes === 0 ? (\n        <div className=\"h-4\">\n          <span>No votes</span>\n        </div>\n      ) : (\n        <div className=\"flex items-center space-x-2\">\n          <div\n            style={{ width: `${(votes / totalVotes) * 100}%` }}\n            className=\"h-4 bg-gray-400\"\n          />\n          <span>{votes}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const ErrorBoundary: ErrorBoundaryComponent = ({ error }) => {\n  const { pollId } = useParams();\n  return (\n    <ErrorHandler\n      title=\"Something went wrong\"\n      message={`We had trouble loading the poll by the id ${pollId}.`}\n      error={error.message}\n    />\n  );\n};\n\nexport const CatchBoundary = CatchHandler;\n", "import type { Poll } from \"@prisma/client\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { Poll } from \"@prisma/client\";\n\nexport function getPoll({ id }: Pick<Poll, \"id\">) {\n  return prisma.poll.findFirst({\n    where: { id },\n    include: {\n      options: {\n        include: { votes: true },\n      },\n    },\n  });\n}\n\nexport function createPoll({\n  title,\n  userId,\n  options,\n  requireAccount,\n  allowMultipleVotes,\n}: Pick<Poll, \"title\" | \"requireAccount\" | \"allowMultipleVotes\"> & {\n  options: string[];\n  userId?: string;\n}) {\n  return prisma.poll.create({\n    data: {\n      title,\n      userId,\n      options: {\n        create: options.map((title) => ({\n          title,\n        })),\n      },\n      requireAccount,\n      allowMultipleVotes,\n    },\n  });\n}\n\nexport function deletePoll({ id }: Pick<Poll, \"id\">) {\n  return prisma.poll.deleteMany({\n    where: { id },\n  });\n}\n", "interface Props {\n  url: string;\n}\n\nexport default function PollLink({ url }: Props) {\n  return (\n    <div className=\"px-4 py-2 bg-gray-100\">\n      <p className=\"text-sm text-gray-500 select-none\">Link to share poll:</p>\n      <p>{url}</p>\n    </div>\n  );\n}\n", "import type { Option, Vote } from \"@prisma/client\";\nimport { getClientIPAddress } from \"remix-utils\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { Vote } from \"@prisma/client\";\n\nexport function createVote({\n  optionId,\n  userId,\n  request,\n  signature,\n}: Pick<Vote, \"optionId\"> & {\n  userId?: string;\n  request: Request;\n  /** The identifier for the client using browserSignature */\n  signature: string | null;\n}) {\n  const ipAddress = getClientIPAddress(request);\n  return prisma.vote.create({\n    data: {\n      optionId,\n      userId,\n      ipAddress,\n      signature,\n    },\n  });\n}\n\nexport function getUserVotes({\n  userId,\n  pollId,\n}: Pick<Option, \"pollId\"> & { userId?: string }) {\n  return prisma.vote.findMany({\n    include: {\n      option: true,\n    },\n    where: {\n      userId,\n      option: {\n        pollId,\n      },\n    },\n  });\n}\n\nexport function getSignatureVotes({\n  signature,\n  pollId,\n}: Pick<Option, \"pollId\"> & Pick<Vote, \"signature\">) {\n  return prisma.vote.findMany({\n    include: {\n      option: true,\n    },\n    where: {\n      signature,\n      option: {\n        pollId,\n      },\n    },\n  });\n}\n", "import * as React from \"react\";\nimport { useSocket } from \"~/context\";\n\ntype ListenEvents = `option ${string}` | \"confirmation\";\ntype EmitEvents = \"vote\";\n\nexport function useListen<T>(\n  eventName: ListenEvents,\n  callback: (data: T) => void\n) {\n  const socket = useSocket();\n\n  React.useEffect(() => {\n    if (!socket) return;\n    socket.on(eventName, callback);\n    return () => {\n      socket.removeListener(eventName);\n    };\n  }, [callback, eventName, socket]);\n}\n\nexport function useEmit() {\n  const socket = useSocket();\n\n  const emit = React.useCallback(\n    <T,>(eventName: EmitEvents, data: T) => {\n      if (!socket) return;\n      socket.emit(eventName, data);\n    },\n    [socket]\n  );\n\n  return emit;\n}\n", "import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ErrorBoundaryComponent,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getPoll } from \"~/models/poll.server\";\nimport {\n  useFetcher,\n  useLoaderData,\n  useNavigate,\n  useParams,\n} from \"@remix-run/react\";\nimport ErrorHandler, { CatchHandler } from \"~/components/ErrorHandler\";\nimport invariant from \"tiny-invariant\";\nimport { FormError, FormRadio } from \"~/components/common/form\";\nimport { Button, LinkButton } from \"~/components/common/button\";\nimport type { Vote } from \"~/models/vote.model\";\nimport {\n  createVote,\n  getSignatureVotes,\n  getUserVotes,\n} from \"~/models/vote.model\";\nimport { getUserId, requireUserId } from \"~/session.server\";\nimport PollLink from \"~/components/PollLink\";\nimport HiddenSignatureInput from \"~/components/HiddenSignatureInput\";\nimport { Modal } from \"~/components/common/modal\";\nimport { useHydrated } from \"remix-utils\";\nimport { useEmit } from \"~/sockets\";\nimport type { EmittedVote } from \"server/votes\";\n\ninterface LoaderData {\n  poll: Awaited<ReturnType<typeof getPoll>>;\n}\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const id = params.pollId;\n  invariant(id, \"pollId not found\");\n\n  const poll = await getPoll({ id });\n  if (!poll) throw new Response(\"Poll Not Found\", { status: 404 });\n\n  if (poll.requireAccount) {\n    await requireUserId(request);\n  }\n\n  return json<LoaderData>({ poll });\n};\n\ninterface ActionData {\n  errors?: {\n    option?: string;\n    alreadyVoted?: string;\n  };\n  vote?: Vote;\n}\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const id = params.pollId;\n  invariant(id, \"pollId not found\");\n  const formData = await request.formData();\n  const option = formData.get(\"option\");\n  const signature = formData.get(\"signature\");\n  invariant(typeof signature === \"string\", \"Unexpected error occured\");\n\n  if (typeof option !== \"string\") {\n    return json<ActionData>(\n      { errors: { option: \"An answer is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const poll = await getPoll({ id });\n  invariant(poll, \"Poll not found\");\n\n  const userId = await getUserId(request);\n\n  if (!poll.allowMultipleVotes) {\n    const signatureVotes = signature\n      ? await getSignatureVotes({ signature, pollId: id })\n      : [];\n    const userVotes = userId ? await getUserVotes({ userId, pollId: id }) : [];\n\n    if (signatureVotes.length > 0 || userVotes.length > 0) {\n      return json<ActionData>(\n        { errors: { alreadyVoted: \"You've already voted\" } },\n        { status: 400 }\n      );\n    }\n  }\n\n  const vote = await createVote({\n    optionId: option,\n    userId,\n    request,\n    signature,\n  });\n\n  // Let the client know that a vote was created\n  // so it can emit to the socket\n  return json({ vote }, { status: 201 });\n};\n\nexport const meta: MetaFunction = ({ data }) => {\n  if (!data) {\n    return { title: \"Poll not found\" };\n  }\n  const { poll } = data as LoaderData;\n  return { title: poll?.title };\n};\n\nexport default function VotingPage() {\n  const emit = useEmit();\n  const fetcher = useFetcher<ActionData>();\n  const hydrated = useHydrated();\n  const data = useLoaderData() as LoaderData;\n  const poll = data.poll!;\n  const navigate = useNavigate();\n\n  const [shared, setShared] = React.useState(false);\n\n  React.useEffect(() => {\n    if (fetcher.type !== \"done\") return;\n    const vote = fetcher.data.vote;\n    if (!vote) return;\n    emit<EmittedVote>(\"vote\", { optionId: vote.optionId });\n    navigate(\"results\");\n  }, [emit, fetcher.data?.vote, fetcher.type, navigate]);\n\n  return (\n    <main className=\"flex flex-col justify-center flex-grow w-full max-w-lg pb-32\">\n      <fetcher.Form method=\"post\" className=\"space-y-16\">\n        <fieldset className=\"space-y-8\">\n          <legend className=\"text-lg\">{poll.title}</legend>\n          <div className=\"space-y-4\">\n            {poll.options.map((option) => (\n              <FormRadio\n                key={option.id}\n                label={option.title}\n                name=\"option\"\n                value={option.id}\n                error={!!fetcher.data?.errors?.option}\n                className=\"text-4xl font-bold\"\n              />\n            ))}\n          </div>\n          <FormError name=\"option\" error={fetcher.data?.errors?.option} />\n        </fieldset>\n\n        <HiddenSignatureInput />\n        {fetcher.data?.errors?.alreadyVoted ? (\n          <Modal\n            title={fetcher.data?.errors?.alreadyVoted}\n            description=\"Why don't you check out the poll results instead\"\n            body={<LinkButton to=\"results\">View Poll Results</LinkButton>}\n            isOpen\n          />\n        ) : null}\n\n        <div className=\"space-y-2\">\n          <div className=\"flex w-full space-x-2\">\n            <Button type=\"submit\" className=\"flex-grow\">\n              Confirm Choice\n            </Button>\n            <Button\n              variant=\"ghost\"\n              type=\"button\"\n              onClick={() => {\n                navigator.clipboard.writeText(window.location.href);\n                setShared(true);\n              }}\n            >\n              {shared ? \"Copied Link\" : \"Share Poll\"}\n            </Button>\n          </div>\n          {shared ? (\n            <PollLink\n              url={hydrated ? window.location.href : \"Preparing link to poll\"}\n            />\n          ) : null}\n        </div>\n      </fetcher.Form>\n    </main>\n  );\n}\n\nexport const ErrorBoundary: ErrorBoundaryComponent = ({ error }) => {\n  const { pollId } = useParams();\n  return (\n    <ErrorHandler\n      title=\"Something went wrong\"\n      message={`We had trouble loading the poll by the id ${pollId}.`}\n      error={error.message}\n    />\n  );\n};\n\nexport const CatchBoundary = CatchHandler;\n", "import * as React from \"react\";\nimport { Checkbox, Input, Radio } from \"./input\";\n\ninterface Stylable {\n  className?: string;\n}\n\ninterface FormLabelProps\n  extends Stylable,\n    Pick<React.HTMLProps<HTMLInputElement>, \"name\"> {\n  label?: string;\n}\n\nexport const FormLabel: React.FC<FormLabelProps> = ({\n  label,\n  name,\n  className = \"\",\n}) => {\n  return label ? (\n    <label htmlFor={name} className={`text-gray-900 ${className}`}>\n      {label}\n    </label>\n  ) : null;\n};\n\ninterface FormHelperProps extends Stylable {\n  helper?: string;\n}\n\nexport const FormHelper: React.FC<FormHelperProps> = ({\n  helper,\n  className = \"\",\n}) => {\n  return helper ? (\n    <p className={`text-sm text-gray-700 ${className}`}>{helper}</p>\n  ) : null;\n};\n\ninterface FormErrorProps\n  extends Stylable,\n    Pick<React.HTMLProps<HTMLInputElement>, \"name\"> {\n  error?: string | boolean;\n}\n\nexport const FormError: React.FC<FormErrorProps> = ({\n  error,\n  name,\n  className = \"\",\n}) => {\n  return typeof error === \"string\" ? (\n    <p id={`${name}-error`} className={`text-sm text-red-700 ${className}`}>\n      {error}\n    </p>\n  ) : null;\n};\n\ninterface FormElementsProps\n  extends FormLabelProps,\n    FormHelperProps,\n    FormErrorProps {\n  containerProps?: React.HTMLProps<HTMLDivElement>;\n}\n\nexport const FormElements: React.FC<FormElementsProps> = ({\n  children,\n  helper,\n  error,\n  label,\n  name,\n  containerProps,\n}) => {\n  return (\n    <div {...containerProps}>\n      {label || helper ? (\n        <div className=\"mb-2\">\n          <FormLabel label={label} name={name} />\n          <FormHelper helper={helper} />\n        </div>\n      ) : null}\n      {children}\n      <FormError className=\"mt-2\" error={error} name={name} />\n    </div>\n  );\n};\n\nexport const FormInput: React.FC<\n  FormElementsProps & React.HTMLProps<HTMLInputElement>\n> = ({ label, helper, error, containerProps, name, ...props }) => {\n  return (\n    <FormElements\n      containerProps={containerProps}\n      helper={helper}\n      error={error}\n      label={label}\n      name={name}\n    >\n      <p>\n        <Input\n          id={name}\n          name={name}\n          aria-invalid={error ? true : undefined}\n          aria-describedby={`${name}-error`}\n          className=\"w-full\"\n          {...props}\n        />\n      </p>\n    </FormElements>\n  );\n};\n\nexport const FormCheckbox: React.FC<\n  FormElementsProps & React.HTMLProps<HTMLInputElement>\n> = ({ label, helper, error, name, className, ...props }) => {\n  return (\n    <div className=\"space-x-2\">\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox\n          id={name}\n          name={name}\n          aria-invalid={error ? true : undefined}\n          aria-describedby={`${name}-error`}\n          {...props}\n        />\n        {label || helper ? (\n          <FormLabel\n            className={`${className ? className : \"text-sm\"} select-none`}\n            label={label}\n            name={name}\n          />\n        ) : null}\n      </div>\n      <FormError className=\"mt-2\" error={error} name={name} />\n    </div>\n  );\n};\n\nexport const FormRadio: React.FC<\n  FormElementsProps & React.HTMLProps<HTMLInputElement>\n> = ({ label, helper, error, name, value: v, className, ...props }) => {\n  const value = v as string;\n  return (\n    <div className=\"space-x-2\">\n      <div className=\"flex items-center space-x-2\">\n        <Radio\n          id={value}\n          name={name}\n          aria-invalid={error ? true : undefined}\n          aria-describedby={`${name}-error`}\n          value={value}\n          {...props}\n        />\n        {label || helper ? (\n          <FormLabel\n            className={`${className ? className : \"text-sm\"} select-none`}\n            label={label}\n            name={value}\n          />\n        ) : null}\n      </div>\n      <FormError className=\"mt-2\" error={error} name={value} />\n    </div>\n  );\n};\n", "import * as React from \"react\";\nimport { noRing, transition, withRing } from \"./styles\";\n\nconst manualBlockInvalid = `focus:border-red-700 border-red-700`;\nconst blockInvalid = `focus:invalid:border-red-700 invalid:border-red-700`;\nconst blockFocused = `focus:border-gray-500 focus:bg-white focus:outline-none focus:outline-0`;\nconst block = `block bg-gray-100 transition-color ${transition} ${blockInvalid} ${blockFocused}`;\n\nexport const Input: React.FC<React.HTMLProps<HTMLInputElement>> = ({\n  className = \"\",\n  \"aria-invalid\": invalid,\n  ...props\n}) => {\n  return (\n    <input\n      className={`${block} ${noRing} ${\n        invalid ? manualBlockInvalid : \"border-transparent\"\n      } form-input ${className}`}\n      aria-invalid={invalid}\n      {...props}\n    />\n  );\n};\n\nexport const Checkbox: React.FC<React.HTMLProps<HTMLInputElement>> = ({\n  className = \"\",\n  \"aria-invalid\": invalid,\n  ...props\n}) => {\n  return (\n    <input\n      className={`${block} ${withRing} ${\n        invalid ? manualBlockInvalid : \"border-transparent\"\n      } form-checkbox text-gray-900 accent-gray-900 ${className}`}\n      aria-invalid={invalid}\n      {...props}\n      type=\"checkbox\"\n    />\n  );\n};\n\nexport const Radio: React.FC<React.HTMLProps<HTMLInputElement>> = ({\n  className = \"\",\n  \"aria-invalid\": invalid,\n  ...props\n}) => {\n  return (\n    <input\n      className={`${block} ${withRing} ${\n        invalid ? manualBlockInvalid : \"border-transparent\"\n      } form-radio text-gray-900 accent-gray-900 ${className}`}\n      {...props}\n      type=\"radio\"\n    />\n  );\n};\n", "import { ClientOnly } from \"remix-utils\";\n\nfunction pad(str: string, size: number): string {\n  return (new Array(size + 1).join(\"0\") + str).slice(-size);\n}\n\nfunction browserSignature(): string {\n  const windowObj = window || global;\n\n  function windowObjCount() {\n    const keys = [];\n    for (let i in windowObj) {\n      keys.push(i);\n    }\n    return keys.length.toString(36);\n  }\n\n  // Browser User Agent count\n  const navi = navigator.userAgent.length.toString(36);\n  const padString = pad(navi + windowObjCount(), 4);\n  // Browser screen specific properties\n  const width = windowObj.screen.width.toString(36);\n  const height = windowObj.screen.height.toString(36);\n  const availWidth = windowObj.screen.availWidth.toString(36);\n  const availHeight = windowObj.screen.availHeight.toString(36);\n  const colorDepth = windowObj.screen.colorDepth.toString(36);\n  const pixelDepth = windowObj.screen.pixelDepth.toString(36);\n\n  return atob(\n    padString +\n      width +\n      height +\n      availWidth +\n      availHeight +\n      colorDepth +\n      pixelDepth\n  );\n}\n\nexport default function HiddenSignatureInput() {\n  return (\n    <ClientOnly>\n      {() => (\n        <input type=\"hidden\" name=\"signature\" value={browserSignature()} />\n      )}\n    </ClientOnly>\n  );\n}\n", "import * as React from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\n\ntype RenderFunction = (\n  openModal: () => void,\n  closeModal: () => void\n) => React.ReactNode;\n\ninterface Props {\n  title?: string;\n  description?: string;\n  body?: React.ReactNode | RenderFunction;\n  children?: RenderFunction;\n  isOpen?: boolean;\n}\n\nexport function Modal({\n  title,\n  description,\n  children,\n  body,\n  isOpen: externalIsOpen,\n}: Props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const closeModal = () => setIsOpen(false);\n  const openModal = () => setIsOpen(true);\n\n  return (\n    <>\n      {typeof children === \"function\"\n        ? children(openModal, closeModal)\n        : children}\n\n      <Transition appear show={externalIsOpen || isOpen} as={React.Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\n          onClose={closeModal}\n        >\n          <div className=\"flex items-center justify-center min-h-screen px-4 \">\n            <Transition.Child\n              as={React.Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-gray-900/75\" />\n            </Transition.Child>\n            <Transition.Child\n              as={React.Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <div className=\"flex flex-col items-start w-full max-w-md p-6 my-8 overflow-hidden text-left bg-white shadow-xl transform space-y-4 transition-all\">\n                <div className=\"space-y-1\">\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-xl font-bold text-gray-900 leading-6\"\n                  >\n                    {title}\n                  </Dialog.Title>\n\n                  <Dialog.Description className=\"text-gray-500 text-md leading-6\">\n                    {description}\n                  </Dialog.Description>\n                </div>\n\n                {body}\n              </div>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition>\n    </>\n  );\n}\n", "// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport type { LoaderFunction } from \"@remix-run/node\";\n\nimport { prisma } from \"~/db.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    // if we can connect to the database and make a simple query\n    // and make a HEAD request to ourselves, then we're good.\n    await Promise.all([\n      prisma.user.count(),\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n        if (!r.ok) return Promise.reject(r);\n      }),\n    ]);\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n};\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // Logging out and redirecting is done in the action above\n  return redirect(\"/\");\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { createPoll } from \"~/models/poll.server\";\nimport { getUserId } from \"~/session.server\";\nimport { useActionData, useTransition, Form } from \"@remix-run/react\";\nimport React from \"react\";\nimport { Button, IconButton } from \"~/components/common/button\";\nimport { FormInput, FormError, FormCheckbox } from \"~/components/common/form\";\nimport { generateId } from \"~/utils\";\nimport { TrashIcon } from \"@heroicons/react/solid\";\n\nexport interface ActionData {\n  errors?: {\n    title?: string;\n    option?: string;\n  };\n}\n\nfunction isValidOptions(array: any[]): array is string[] {\n  return array.every((item) => typeof item === \"string\" && item.length > 0);\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const options = formData.getAll(\"option\");\n  const requireAccount = formData.get(\"requireAccount\");\n  const allowMultipleVotes = formData.get(\"allowMultipleVotes\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json<ActionData>(\n      { errors: { title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n  if (options.length < 2) {\n    return json<ActionData>(\n      { errors: { option: \"At least two options are required\" } },\n      { status: 400 }\n    );\n  }\n  if (!isValidOptions(options)) {\n    return json<ActionData>(\n      { errors: { option: \"At least two valid options are required\" } },\n      { status: 400 }\n    );\n  }\n\n  const userId = await getUserId(request);\n\n  const poll = await createPoll({\n    title,\n    userId,\n    options,\n    requireAccount: requireAccount === \"on\" ? true : false,\n    allowMultipleVotes: allowMultipleVotes === \"on\" ? true : false,\n  });\n\n  return redirect(`/polls/${poll.id}`);\n};\n\n// We need to provide a seed so this can be hydrated properly\nconst initOptions = [generateId(\"foo\"), generateId(\"bar\")];\n\nexport default function Index() {\n  const actionData = useActionData() as ActionData | undefined;\n  const transition = useTransition();\n\n  const [options, setOptions] = React.useState<string[]>(initOptions);\n\n  return (\n    <main className=\"flex flex-col justify-center flex-grow w-full max-w-lg pb-32\">\n      <Form method=\"post\">\n        <fieldset\n          className=\"space-y-6\"\n          disabled={transition.state === \"submitting\"}\n        >\n          <FormInput\n            aria-label=\"Poll title\"\n            placeholder=\"What is the title of your poll?\"\n            name=\"title\"\n            error={actionData?.errors?.title}\n          />\n\n          <fieldset className=\"flex flex-col pb-4 space-y-2\">\n            {options.map((id, i) => (\n              <div key={id} className=\"flex items-center space-x-2\">\n                <FormInput\n                  containerProps={{ className: \"flex-grow\" }}\n                  aria-label={`Option ${id}`}\n                  placeholder={`Label for option ${i + 1}`}\n                  name=\"option\"\n                  // Autofocus on newly added options\n                  autoFocus={\n                    options.length > 0 ? options.length === i + 1 : false\n                  }\n                  error={!!actionData?.errors?.option}\n                />\n                <IconButton\n                  type=\"button\"\n                  variant=\"ghost\"\n                  icon={TrashIcon}\n                  className=\"text-gray-500\"\n                  onClick={() =>\n                    setOptions((opts) => opts.filter((o) => o !== id))\n                  }\n                />\n              </div>\n            ))}\n            <FormError name=\"option\" error={actionData?.errors?.option} />\n            <Button\n              type=\"button\"\n              onClick={() => setOptions((opts) => [...opts, generateId()])}\n              variant=\"ghost\"\n              className=\"self-start\"\n            >\n              + Add Option\n            </Button>\n          </fieldset>\n\n          <Button type=\"submit\" className=\"w-full\">\n            {transition.state === \"submitting\"\n              ? \"Creating Poll\"\n              : \"Create Poll\"}\n          </Button>\n\n          <div className=\"space-y-2\">\n            <FormCheckbox\n              name=\"requireAccount\"\n              label=\"Require account to vote\"\n            />\n            <FormCheckbox\n              name=\"allowMultipleVotes\"\n              label=\"Allow multiple votes\"\n            />\n          </div>\n        </fieldset>\n      </Form>\n    </main>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { validateEmail } from \"~/utils\";\nimport { FormCheckbox, FormInput } from \"~/components/common/form\";\nimport { Button } from \"~/components/common/button\";\nimport { link } from \"~/components/common/styles\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = formData.get(\"redirectTo\");\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n  if (typeof password !== \"string\") {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json<ActionData>(\n      { errors: { email: \"Invalid email or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo: typeof redirectTo === \"string\" ? redirectTo : \"/\",\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\n  const actionData = useActionData() as ActionData | undefined;\n\n  return (\n    <main className=\"flex flex-col justify-center flex-grow w-full max-w-md pb-32 space-y-16\">\n      <Form method=\"post\" className=\"space-y-6\">\n        <FormInput\n          label=\"Email address\"\n          type=\"email\"\n          autoComplete=\"email\"\n          name=\"email\"\n          autoFocus\n          error={actionData?.errors?.email}\n        />\n\n        <FormInput\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          name=\"password\"\n          error={actionData?.errors?.password}\n        />\n\n        <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\n        <Button type=\"submit\" className=\"w-full\">\n          Login\n        </Button>\n\n        <div className=\"flex items-center justify-between\">\n          <FormCheckbox label=\"Remember me\" name=\"remember\" />\n\n          <span className=\"text-sm text-center text-gray-500\">\n            Don't have an account?{\" \"}\n            <Link\n              className={link}\n              to={{ pathname: \"/join\", search: searchParams.toString() }}\n            >\n              Sign up\n            </Link>\n          </span>\n        </div>\n      </Form>\n    </main>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { validateEmail } from \"~/utils\";\nimport { FormInput } from \"~/components/common/form\";\nimport { Button } from \"~/components/common/button\";\nimport { link } from \"~/components/common/styles\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = formData.get(\"redirectTo\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n  if (typeof password !== \"string\") {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n\n  if (existingUser) {\n    return json<ActionData>(\n      { errors: { email: \"A user already exists with this email\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo: typeof redirectTo === \"string\" ? redirectTo : \"/\",\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <main className=\"flex flex-col justify-center flex-grow w-full max-w-md pb-32\">\n      <Form method=\"post\" className=\"space-y-6\">\n        <FormInput\n          label=\"Email address\"\n          type=\"email\"\n          autoComplete=\"email\"\n          name=\"email\"\n          autoFocus\n          error={actionData?.errors?.email}\n        />\n\n        <FormInput\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          name=\"password\"\n          error={actionData?.errors?.password}\n        />\n\n        <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\n        <Button type=\"submit\" className=\"w-full\">\n          Create Account\n        </Button>\n\n        <div className=\"flex items-center justify-center\">\n          <div className=\"text-sm text-center text-gray-500\">\n            Already have an account?{\" \"}\n            <Link\n              className={link}\n              to={{ pathname: \"/login\", search: searchParams.toString() }}\n            >\n              Login\n            </Link>\n          </div>\n        </div>\n      </Form>\n    </main>\n  );\n}\n", "export default {'version':'b29c7960','entry':{'module':'/build/entry.client-KSTEYACA.js','imports':['/build/_shared/chunk-FKVNPCUN.js','/build/_shared/chunk-54RWOSBF.js','/build/_shared/chunk-FN7GJDOI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-QQ6JTEBF.js','imports':['/build/_shared/chunk-N6PRYNC7.js','/build/_shared/chunk-4LTELVPZ.js','/build/_shared/chunk-XS736JBB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-ISYLMUCQ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-4QX5H26R.js','imports':['/build/_shared/chunk-KE566MEM.js','/build/_shared/chunk-6J3XNV5P.js','/build/_shared/chunk-WGBR62OH.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-4C5ZSIGB.js','imports':['/build/_shared/chunk-UO7E4SR4.js','/build/_shared/chunk-6J3XNV5P.js','/build/_shared/chunk-WGBR62OH.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-ITV5FO3P.js','imports':['/build/_shared/chunk-UO7E4SR4.js','/build/_shared/chunk-6J3XNV5P.js','/build/_shared/chunk-WGBR62OH.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-BIDIRFBP.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/polls/$pollId/index':{'id':'routes/polls/$pollId/index','parentId':'root','path':'polls/:pollId','index':true,'caseSensitive':undefined,'module':'/build/routes/polls/$pollId/index-44Q267U5.js','imports':['/build/_shared/chunk-32QG7ZND.js','/build/_shared/chunk-KE566MEM.js','/build/_shared/chunk-6J3XNV5P.js','/build/_shared/chunk-WGBR62OH.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/polls/$pollId/results':{'id':'routes/polls/$pollId/results','parentId':'root','path':'polls/:pollId/results','index':undefined,'caseSensitive':undefined,'module':'/build/routes/polls/$pollId/results-NYUAPM5X.js','imports':['/build/_shared/chunk-32QG7ZND.js','/build/_shared/chunk-KE566MEM.js','/build/_shared/chunk-WGBR62OH.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true}},'url':'/build/manifest-B29C7960.js'};", "\nimport * as entryServer from \"/Users/DanielWestbrook/Sites/brisk-poll/app/entry.server.tsx\";\nimport * as route0 from \"/Users/DanielWestbrook/Sites/brisk-poll/app/root.tsx\";\nimport * as route1 from \"/Users/DanielWestbrook/Sites/brisk-poll/app/routes/polls/$pollId/results.tsx\";\nimport * as route2 from \"/Users/DanielWestbrook/Sites/brisk-poll/app/routes/polls/$pollId/index.tsx\";\nimport * as route3 from \"/Users/DanielWestbrook/Sites/brisk-poll/app/routes/healthcheck.tsx\";\nimport * as route4 from \"/Users/DanielWestbrook/Sites/brisk-poll/app/routes/logout.tsx\";\nimport * as route5 from \"/Users/DanielWestbrook/Sites/brisk-poll/app/routes/index.tsx\";\nimport * as route6 from \"/Users/DanielWestbrook/Sites/brisk-poll/app/routes/login.tsx\";\nimport * as route7 from \"/Users/DanielWestbrook/Sites/brisk-poll/app/routes/join.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/polls/$pollId/results\": {\n      id: \"routes/polls/$pollId/results\",\n      parentId: \"root\",\n      path: \"polls/:pollId/results\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/polls/$pollId/index\": {\n      id: \"routes/polls/$pollId/index\",\n      parentId: \"root\",\n      path: \"polls/:pollId\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": []
}
