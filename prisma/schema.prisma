datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id    String @id @default(cuid())
    email String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    password Password?

    polls Poll[]
    votes Vote[]
}

model Password {
    hash String

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String @unique
}

model Poll {
    id    String @id @default(cuid())
    title String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String?

    options Option[]
}

model Option {
    id    String @id @default(cuid())
    title String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    poll   Poll   @relation(fields: [pollId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    pollId String

    votes Vote[]
}

model Vote {
    id String @id @default(cuid())

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    option   Option @relation(fields: [optionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    optionId String

    user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String?
}
